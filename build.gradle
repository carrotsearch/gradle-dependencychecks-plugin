plugins {
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'groovy'
    id 'signing'
}

def humanName = 'dependencychecks-plugin'
project.group = 'com.carrotsearch.gradle.dependencychecks'
project.version = '0.0.1'
project.description = 'Dependency checker and lock file aggregator'

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-databind:2.15.2"

    testImplementation "com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.7.9"
    testImplementation "org.junit.jupiter:junit-jupiter:5.7.1"
    testImplementation "org.assertj:assertj-core:3.22.0"

    testImplementation platform("org.spockframework:spock-bom:2.3-groovy-3.0")
    testImplementation "org.spockframework:spock-core"
}

gradlePlugin {
    website = 'https://github.com/carrotsearch/gradle-dependencychecks-plugin'
    vcsUrl = 'https://github.com/carrotsearch/gradle-dependencychecks-plugin.git'
    plugins {
        dependencychecks {
            id = project.group
            implementationClass = 'com.carrotsearch.gradle.dependencychecks.DependencyChecksPlugin'
            displayName = humanName
            description = project.description
            tags = ['utility']
        }
    }
}

java {
    sourceCompatibility = 17
    targetCompatibility = 17
}

tasks.withType(JavaCompile).configureEach {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
  options.encoding = "UTF-8"
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = 'staging'
            url = project.layout.buildDirectory.dir("m2-local")
        }

        maven {
            name = 'sonatype'
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"

            credentials {
                if (project.hasProperty('nexusUsername')) {
                    username project.nexusUsername
                }
                if (project.hasProperty('nexusPassword')) {
                    password project.nexusPassword
                }
            }
        }
    }

    publications {
        withType(MavenPublication).configureEach {
            pom {
                inceptionYear = "2023"

                name = humanName
                description = project.description
                url = gradlePlugin.website

                licenses {
                    license {
                        name = 'Apache 2'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                organization {
                    name = "Carrot Search s.c."
                    url = "https://www.carrotsearch.com"
                }

                developers {
                    developer {
                        id = 'dawid.weiss'
                        name = 'Dawid Weiss'
                        email = 'dawid.weiss@carrotsearch.com'
                    }
                }

                scm {
                    connection = 'scm:git:git@github.com:carrotsearch/gradle-dependencychecks-plugin.git'
                    developerConnection = gradlePlugin.vcsUrl
                    url = gradlePlugin.website
                }
            }
        }
    }
}

tasks.register("deploy", {
    dependsOn "publishDependencychecksPluginMarkerMavenPublicationToSonatypeRepository",
        "publishPluginMavenPublicationToSonatypeRepository",
        publishPlugins
})

tasks.register("deployStaging", {
    dependsOn "publishDependencychecksPluginMarkerMavenPublicationToStagingRepository",
              "publishPluginMavenPublicationToStagingRepository"
})
